// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.
import type { LibraryConfigWrapped } from "./LibraryConfigWrapped";
import type { LocationUpdateArgs } from "./LocationUpdateArgs";
import type { SetFavoriteArgs } from "./SetFavoriteArgs";
import type { Tag } from "./Tag";
import type { TagUpdateArgs } from "./TagUpdateArgs";
import type { LibraryConfig } from "./LibraryConfig";
import type { Statistics } from "./Statistics";
import type { GenerateThumbsForLocationArgs } from "./GenerateThumbsForLocationArgs";
import type { Platform } from "./Platform";
import type { Volume } from "./Volume";
import type { TagCreateArgs } from "./TagCreateArgs";
import type { EditLibraryArgs } from "./EditLibraryArgs";
import type { GetExplorerDirArgs } from "./GetExplorerDirArgs";
import type { LocationResource } from "./LocationResource";
import type { LibraryNode } from "./LibraryNode";
import type { TagAssignArgs } from "./TagAssignArgs";
import type { NodeState } from "./NodeState";
import type { DirectoryWithContents } from "./DirectoryWithContents";
import type { JobStatus } from "./JobStatus";
import type { IdentifyUniqueFilesArgs } from "./IdentifyUniqueFilesArgs";
import type { SetNoteArgs } from "./SetNoteArgs";
import type { FilePath } from "./FilePath";
import type { JobReport } from "./JobReport";

export interface Operations { queries: Queries, mutations: Mutations, subscriptions: Subscriptions }

export type Queries = | { key: "files.readMetadata"; arg: number; result: null; } | { key: "getLibraryStatistics"; arg: null; result: Statistics; } | { key: "getNode"; arg: null; result: NodeState; } | { key: "jobs.getHistory"; arg: null; result: Array<{ id: string, name: string, data: string | null, date_created: string, date_modified: string, status: JobStatus, task_count: number, completed_task_count: number, message: string, seconds_elapsed: string, }>; } | { key: "jobs.getRunning"; arg: null; result: Array<{ id: string, name: string, data: string | null, date_created: string, date_modified: string, status: JobStatus, task_count: number, completed_task_count: number, message: string, seconds_elapsed: string, }>; } | { key: "library.get"; arg: null; result: Array<{ uuid: string, config: LibraryConfig, }>; } | { key: "locations.get"; arg: null; result: Array<{ id: number, name: string | null, path: string | null, total_capacity: number | null, available_capacity: number | null, is_removable: boolean | null, node: LibraryNode | null, is_online: boolean, date_created: string, }>; } | { key: "locations.getById"; arg: number; result: LocationResource; } | { key: "locations.getExplorerDir"; arg: GetExplorerDirArgs; result: DirectoryWithContents; } | { key: "locations.getStatistics"; arg: null; result: Statistics; } | { key: "tags.get"; arg: null; result: Array<{ id: number, pub_id: string, name: string | null, color: string | null, total_files: number | null, redundancy_goal: number | null, date_created: string, date_modified: string, }>; } | { key: "tags.getFilesForTag"; arg: number; result: { id: number, pub_id: string, name: string | null, color: string | null, total_files: number | null, redundancy_goal: number | null, date_created: string, date_modified: string, } | null; } | { key: "version"; arg: null; result: string; } | { key: "volumes.get"; arg: null; result: Array<{ name: string, mount_point: string, total_capacity: bigint, available_capacity: bigint, is_removable: boolean, disk_type: string | null, file_system: string | null, is_root_filesystem: boolean, }>; };

export type Mutations = | { key: "files.delete"; arg: number; result: null; } | { key: "files.setFavorite"; arg: SetFavoriteArgs; result: null; } | { key: "files.setNote"; arg: SetNoteArgs; result: null; } | { key: "jobs.generateThumbsForLocation"; arg: GenerateThumbsForLocationArgs; result: null; } | { key: "jobs.identifyUniqueFiles"; arg: IdentifyUniqueFilesArgs; result: null; } | { key: "library.create"; arg: string; result: null; } | { key: "library.delete"; arg: string; result: null; } | { key: "library.edit"; arg: EditLibraryArgs; result: null; } | { key: "locations.create"; arg: string; result: LocationResource; } | { key: "locations.delete"; arg: number; result: null; } | { key: "locations.fullRescan"; arg: number; result: null; } | { key: "locations.quickRescan"; arg: null; result: null; } | { key: "locations.update"; arg: LocationUpdateArgs; result: null; } | { key: "tags.assign"; arg: TagAssignArgs; result: null; } | { key: "tags.create"; arg: TagCreateArgs; result: Tag; } | { key: "tags.delete"; arg: number; result: null; } | { key: "tags.update"; arg: TagUpdateArgs; result: null; };

export type Subscriptions = never;
